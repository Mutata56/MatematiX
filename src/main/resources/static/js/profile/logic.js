import autosize from "/js/autosize.js";  // –ü–æ–¥–∫–ª—é—á–∞–µ–º –ø–ª–∞–≥–∏–Ω –∞–≤—Ç–æ–ø–æ–¥–≥–æ–Ω–∫–∏ –≤—ã—Å–æ—Ç—ã textarea

/**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ ¬´–ó–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏¬ª.
     * –£–¥–∞–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ñ–æ—Ä–º—É –≤–≤–æ–¥–∞, –æ–±–ª–∞—Å—Ç—å –¥–ª—è –Ω–æ–≤—ã—Ö –∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤.
     * @param {MouseEvent} event - —Å–æ–±—ã—Ç–∏–µ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ
*/
let loadCommentsButton = document.getElementById("loadComments");
/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤.
 * –£–¥–∞–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É –∏ –≤—Å—Ç–∞–≤–ª—è–µ—Ç —Ñ–æ—Ä–º—É –¥–ª—è –≤–≤–æ–¥–∞, –∞ —Ç–∞–∫–∂–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤.
 * @param {MouseEvent} event - —Å–æ–±—ã—Ç–∏–µ –∫–ª–∏–∫–∞
 */
loadCommentsButton.addEventListener("click", (event) => {
    // –£–¥–∞–ª—è–µ–º —Å–∞–º—É –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –≤—Å—Ç–∞–≤–æ–∫ —Ñ–æ—Ä–º—ã
    $("#loadComments").remove();

    /**
     * –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ñ–æ—Ä–º—ã –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤.
     * @type {jQuery<HTMLElement>}
     */

    let commentsContent = $(".comments-content");

    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –≤—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    commentsContent.css("align-items", "");

    /**
     * HTML-—Ä–∞–∑–º–µ—Ç–∫–∞ –∞–≤–∞—Ç–∞—Ä–∞ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
     * @type {string}
     */
    let renderedAvatar = hasMyAvatar
        ? `<img src="data:image/webp;base64,${avatars[currentName].avatar}" id="avatarComments">`
        : '<img src="/img/UnsetAvatar.webp" id="avatarComments" alt="">\n';

    // –í—Å—Ç–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É –¥–ª—è –Ω–æ–≤–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
    commentsContent.append(
        ' <div class="writeCommentSuggestionDiv">\n' +
        '  <div style="display: flex;gap:50px;">\n' +
        '    <div class="avatar-wrapper-medium avatar-wrapper" ' +
                'style="min-width: 72px;max-width:72px;min-height: 72px;max-height:72px;border: none !important;">\n' +
        `      <a href="/profile">\n${renderedAvatar}\n</a>\n` +
        '    </div>\n' +
        '    <form content="0" id="sendCommentForm" method="POST" action="/createComment" style="width: 100%">\n' +
        '      <textarea style="position: relative" minlength="1" maxlength="300" ' +
                'placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π..." name="content" id="content"></textarea>\n' +
        `      <input type="hidden" name="receiver" id="receiver" value="${name}">\n` +
        '    </form>\n' +
        '  </div>\n' +
        '  <div style="margin-top:5px">\n' +
        '    <input type="submit" id="sendButton">\n' +
        '  </div>\n' +
        '</div>'
    );

    // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
    commentsContent.append(`<div id="theDiv"></div>`);

    // –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–æ—Ä–º–æ–π
    /** @type {HTMLTextAreaElement} */
    let textArea = document.getElementById("content");
    /** @type {HTMLInputElement} */
    let sendButton = document.getElementById("sendButton");
    /** @type {HTMLFormElement} */
    let commentForm = document.getElementById("sendCommentForm");
    /** –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –∫–Ω–æ–ø–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ */
    let buttonIsVanished = true;

    // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è –∏ –ø–æ–∫–∞–∑–∞ –∫–Ω–æ–ø–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏
    /** –°–∫—Ä—ã—Ç—å –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏ */
    let buttonDisappear = () => { sendButton.style.visibility = "hidden"; };
    /** –ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏ */
    let buttonAppear   = () => { sendButton.style.visibility = "visible"; };

    /**
     * –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –≤–∏–¥–∏–º–æ—Å—Ç—å –∫–Ω–æ–ø–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ textarea.
     */
    let toggleButton = () => {
        if (textArea.value.length === 0) {
            buttonDisappear();
            buttonIsVanished = true;
        } else if (buttonIsVanished) {
            buttonAppear();
            buttonIsVanished = false;
        }
    };

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ ‚Äî –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∞—Ç—Ä–∏–±—É—Ç —Ñ–æ—Ä–º—ã
    textArea.addEventListener("input", () => {
        toggleButton();
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â—É—é –¥–ª–∏–Ω—É —Ç–µ–∫—Å—Ç–∞ –≤ –∞—Ç—Ä–∏–±—É—Ç —Ñ–æ—Ä–º—ã –¥–ª—è placeholder-–ø–æ–∫–∞–∑–∞—Ç–µ–ª—è
        commentForm.setAttribute("content", textArea.value.length);
    });

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–≤—Ç–æ–ø–æ–¥–≥–æ–Ω–∫–∏ –≤—ã—Å–æ—Ç—ã textarea.
     */
    const pingAutoSize = () => {
        autosize(document.getElementsByClassName("toBeAutoGrown"));
    };

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ª–∞–π–∫–æ–≤ (e.g. 1500 -> "1.5K").
     * @param {number} num ‚Äî —á–∏—Å–ª–æ –ª–∞–π–∫–æ–≤
     * @returns {string|number} –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
     */
    function formatLikes(num) {
        return Math.abs(num) > 999
            ? Math.sign(num) * ((Math.abs(num) / 1000).toFixed(1)) + 'K'
            : Math.sign(num) * Math.abs(num);
    }

    /**
     * STOMP-–∫–ª–∏–µ–Ω—Ç –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.
     * @type {?Stomp.Client}
     */
    let stompClient = null;

    /**
     * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç WebSocket-–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏ –ø–æ–¥–ø–∏—Å–∫–∏.
     */
    function connect() {
        let socket = new SockJS("/listenToNewEvents");
        stompClient = Stomp.over(socket);
        stompClient.connect({}, function() {
            // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –Ω–æ–≤—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            stompClient.subscribe(`/user/${name}/queue/messages`, function(data) {
                prepareToAddComment(JSON.parse(data.body));
            });
            // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–∞–π–∫–æ–≤/–¥–∏–∑–ª–∞–π–∫–æ–≤
            stompClient.subscribe(`/user/${name}/queue/changeLikeAmount`, function(data) {
                let [id, rating] = JSON.parse(data.body).split(' ');
                let element = document.querySelector(`p[content="${id}"] .rating`);
                element.textContent = rating;
            });
        }, function() {
            console.log("Error connecting...");
        });
    }


    // –ó–∞–ø—É—Å–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏ autosize –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞
    $(document).ready(function() {
        connect();
        autosize(textArea);
    });

    /**
     * –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ–º—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤.
     * @type {HTMLElement}
     */
    let theDiv = document.getElementById("theDiv");

    /** Map –¥–ª—è —Ç–∞–π–º–µ—Ä–æ–≤ –¥–µ–±–∞—É–Ω—Å–∞ –ª–∞–π–∫–æ–≤ */
    let idToTimer = new Map();


    /**
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ª–∞–π–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–¥–µ—Ä–∂–∫–∏.
     * @param {string} id ‚Äî –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
     * @param {string} textContent ‚Äî —Å–∏–º–≤–æ–ª –ª–∞–π–∫–∞ –∏–ª–∏ –¥–∏–∑–ª–∞–π–∫–∞
     * @param {Map<string, number>} map ‚Äî –∫–∞—Ä—Ç–∞ —Ç–∞–π–º–µ—Ä–æ–≤
     */
    let timerLogic = function(id, textContent, map) {
        stompClient.send(
            `/application/changeLikeAmount`,
            {},
            JSON.stringify({ id: id, username: currentName, like: textContent == "üëç" })
        );
        map.delete(id);
    };
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–æ–≤ –ø–æ –ª–∞–π–∫–∞–º/–¥–∏–∑–ª–∞–π–∫–∞–º ‚Äî —Ä–µ–∞–ª–∏–∑—É–µ—Ç –¥–µ–±–∞—É–Ω—Å
    theDiv.addEventListener("click", (event) => {
        let target = event.target;
        if (target.nodeName === "SPAN" && (target.textContent === "üëç" || target.textContent === "üëé")) {
            let id = target.parentElement.getAttribute("content");
            // –ï—Å–ª–∏ –¥–ª—è —ç—Ç–æ–≥–æ ID —É–∂–µ –µ—Å—Ç—å –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã–π —Ç–∞–π–º–µ—Ä ‚Äî —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –µ–≥–æ
            if (idToTimer.has(id)) {
                clearTimeout(idToTimer.get(id));
            }
            // –°—Ç–∞–≤–∏–º –Ω–æ–≤—ã–π —Ç–∞–π–º–µ—Ä –Ω–∞ 1.5 —Å–µ–∫—É–Ω–¥—ã
            idToTimer.set(
                id,
                setTimeout(() => { timerLogic(id, target.textContent, idToTimer); }, 1500)
            );
        }
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–∫–µ—Ç–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    window.onbeforeunload = function() {
        socket.onclose = function() {};
        socket.close();
    };

    // –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–≤–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è —á–µ—Ä–µ–∑ STOMP
    function sendMessage() {
        stompClient.send(
            "/application/sendComment",
            {},
            JSON.stringify({
                username: currentName,
                recipient: name,
                content: $("#content").val(),
                date: new Date().getTime(),
                isActive: 1
            })
        );
    }
    $("#sendButton").on("click", sendMessage);

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML-—Ä–∞–∑–º–µ—Ç–∫–∏ –æ–¥–Ω–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è.
     * @param {{id: string, author?: string, username?: string, content: string, rating: number, stringDate: string}} obj
     * @returns {string} HTML-–±–ª–æ–∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
     */
    function getComment(obj) {
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —É –∫–æ–≥–æ –±—Ä–∞—Ç—å –∞–≤–∞—Ç–∞—Ä: –∞–≤—Ç–æ—Ä –∏–ª–∏ username
        let authorKey = obj.author != null ? "author" : "username";
        let img;
        if (!obj[authorKey] || !avatars[obj[authorKey]] || !avatars[obj[authorKey]].avatar) {
            img = `<img src="/img/UnsetAvatar.webp" style="width:72px;height:72px;" alt="${obj[authorKey]}'s avatar">`;
        } else {
            img = `<img src="data:image/webp;base64,${avatars[obj[authorKey]].avatar}" ` +
                  `style="width:72px;height:72px;" alt="${obj[authorKey]}'s avatar">`;
        }
        // –°–æ–±–∏—Ä–∞–µ–º –ø–æ–ª–Ω—ã–π –±–ª–æ–∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è —Å –∞–≤–∞—Ç–∞—Ä–æ–º, –∞–≤—Ç–æ—Ä–æ–º, —Ç–µ–∫—Å—Ç–æ–º –∏ —Ä–µ–π—Ç–∏–Ω–≥–æ–º
        return `
            <div class="comment" style="margin-top:70px;position: relative">
                <div class="comment-date"
                     style="color:#e1e1e1;font-size:11px;position:absolute;right:0;top:-21px;
                            width:100%;height:20px;display:flex;justify-content:flex-end;">
                    ${obj.stringDate}
                </div>
                <div class="comment-body" style="display:flex;gap:50px;position:relative;">
                    <div>
                        <div class="avatar-wrapper-medium avatar-wrapper"
                             style="position:relative;border:none!important;
                                    min-width:72px;max-width:72px;min-height:72px;max-height:72px;">
                            <a href="/profile/${obj[authorKey]}">${img}</a>
                        </div>
                        <div class="comment-author"
                             style="position:absolute;left:50%;transform:translateX(-50%);
                                    top:12px;color:white;font-size:14px;">
                            <a href="/profile/${obj[authorKey]}" style="text-decoration:none;color:white;">
                                ${obj[authorKey]}
                            </a>
                        </div>
                    </div>
                    <textarea readonly class="toBeAutoGrown" style="cursor:pointer;overflow:hidden;overflow-wrap:break-word;">${obj.content.trim()}</textarea>
                </div>
                <div class="comment-rating"
                     style="display:flex;justify-content:flex-end;
                            position:absolute;right:2px;height:20px;width:100%;">
                    <p content="${obj.id}" style="color:white">
                        <!-- –î–∏–∑–ª–∞–π–∫ -->
                        <span class="dislike" style="font-size:14px;cursor:pointer;">üëé</span>
                        <!-- –†–µ–π—Ç–∏–Ω–≥ -->
                        <span class="rating"
                              style="font-size:14px;margin:0 5px;">
                            ${formatLikes(obj.rating)}
                        </span>
                        <!-- –õ–∞–π–∫ -->
                        <span class="like" style="font-size:15px;cursor:pointer;">üëç</span>
                    </p>
                </div>
            </div>`;
    }

    // –ú–∞—Å—Å–∏–≤ –¥–ª—è –±—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–µ—Å–ª–∏ –æ–Ω–∏ –ø—Ä–∏—Ö–æ–¥—è—Ç –Ω–µ –æ—Ç –º–µ–Ω—è)
    let newMessages = [];

    // –ì–æ—Ç–æ–≤–∏–º –Ω–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –≤—ã–≤–æ–¥—É –∏–ª–∏ –±—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏–∏
    function prepareToAddComment(obj) {
        if (!name || obj.username === currentName) {
            // –ï—Å–ª–∏ —ç—Ç–æ –º–æ–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π ‚Äî —Å—Ä–∞–∑—É –¥–æ–±–∞–≤–ª—è–µ–º
            addComment(obj);
        } else {
            // –ò–Ω–∞—á–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ù–æ–≤—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏" –∏ –±—É—Ñ–µ—Ä–∏–∑—É–µ–º
            let loadNewComments = document.getElementById("loadNewComments");
            if (!loadNewComments) {
                let btn = `<button id="loadNewComments"
                                   style="position:absolute;top:112px;left:430px">
                               –ù–æ–≤—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
                           </button>`;
                $(btn).insertAfter("#content");
                loadNewComments = document.getElementById("loadNewComments");
                loadNewComments.addEventListener("click", function(event) {
                    event.preventDefault();
                    addComments(newMessages);
                });
            }
            newMessages.push(obj);
            $("#content").val("");
            commentForm.setAttribute("content", 0);
            toggleButton();
        }
    }

    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ä–∞–∑—É –≤—Å–µ –±—É—Ñ–µ—Ä–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
    function addComments(data) {
        data.forEach(item => addComment(item));
        newMessages = [];
        $("#loadNewComments").remove();
    }

    // –í—Å—Ç–∞–≤–ª—è–µ–º –æ–¥–∏–Ω –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ –Ω–∞—á–∞–ª–æ –±–ª–æ–∫–∞
    function addComment(obj) {
        let elem = getComment(obj);
        $("#theDiv").prepend(elem);
        $("#content").val("");
        commentForm.setAttribute("content", 0);
        toggleButton();
        pingAutoSize();
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –ø—Ä–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    if (totalPages >= 1) {
        let currentPage = 0;
        const showComments = (data) => {
            let { r: uploadedAvatars, t: newComments } = data;
            // –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–æ–≤—ã–µ –∞–≤–∞—Ç–∞—Ä–∫–∏ ‚Äî –¥–æ–±–∞–≤–ª—è–µ–º –≤ –ø–∞–º—è—Ç—å
            Object.keys(uploadedAvatars).forEach(key => {
                avatars[key] = uploadedAvatars[key];
            });
            // –í—Å—Ç–∞–≤–ª—è–µ–º –±–ª–æ–∫–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
            newComments.forEach((item, idx) => {
                let elem = getComment(item);
                if (totalPages === currentPage) {
                    $("#theDiv").append(elem);
                    $("#loadMoreButtonDiv").remove();
                } else {
                    $(elem).insertBefore("#loadMoreButtonDiv");
                }
            });
        };

        $(document).ready(function() {
            // –ï—Å–ª–∏ –µ—Å—Ç—å –±–æ–ª—å—à–µ –æ–¥–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã ‚Äî –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ë–æ–ª—å—à–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤"
            if (totalPages >= 2) {
                $("#theDiv").append(`
                    <div id="loadMoreButtonDiv" style="margin-top:100px;text-align:center;">
                        <button id="loadMoreButton">–ë–æ–ª—å—à–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤</button>
                    </div>
                `);
                $("#loadMoreButton").click(event => {
                    event.preventDefault();
                    currentPage++;
                    $.ajax({
                        url: "/ajax/nextComments",
                        data: {
                            usersWhoseAvatarsAreLoaded: Object.keys(avatars).join(','),
                            currentPage, user: name
                        },
                        success: showComments
                    });
                });
            }
            // –ü–æ–¥–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
            $.ajax({
                url: "/ajax/nextComments",
                data: {
                    usersWhoseAvatarsAreLoaded: Object.keys(avatars).join(','),
                    currentPage, user: name
                },
                success: showComments
            });
            currentPage = 1;
        });
    }
});
